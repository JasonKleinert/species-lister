{"version":3,"sources":["IconicTaxaSelector.jsx","LocationInput.jsx","ListerButton.jsx","SpeciesList.jsx","utilities/fetchObservations.js","ListerContent.jsx","ListerLayout.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Option","Select","IconicTaxaSelector","props","className","placeholder","allowClear","style","width","onChange","handleIconicTaxaChange","value","LocationInput","size","handleSelectLocation","type","onClick","handleLocationButtonClick","ListerButton","handleListerButtonClick","handleClearListerButtonClick","SpeciesList","orientation","speciesList","length","iconicTaxa","dataSource","renderItem","item","Item","recursiveObservationFetcher","pageNum","lat","long","results","a","console","log","uri","fetch","method","headers","response","ok","message","status","Error","json","observations","push","nextPage","ListerContent","useState","setIconicTaxa","location","setLocation","data","setData","loading","setLoading","success","pos","crd","coords","latitude","longitude","accuracy","error","err","warn","code","e","navigator","geolocation","getCurrentPosition","enableHighAccuracy","timeout","maximumAge","window","alert","split","then","dataPages","speciesSet","Set","forEach","page","observation","add","sort","createSpeciesList","Header","Layout","Footer","ListerLayout","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.67e82c44.chunk.js","sourcesContent":["import { Select } from 'antd';\n\nconst { Option } = Select;\n\nexport function IconicTaxaSelector(props) {\n    \n  return (\n    <div className=\"iconic-taxa-selector\">\n      <Select\n        placeholder=\"Select an iconic taxa\"\n        allowClear={true}\n        style={{ width: 200 }}\n        onChange={props.handleIconicTaxaChange}\n      >\n        <Option value=\"Animalia\">Animalia</Option>\n        <Option value=\"Amphibia\">Amphibia</Option>\n        <Option value=\"Arachnida\">Arachnida</Option>\n        <Option value=\"Aves\">Aves</Option>\n        <Option value=\"Chromista\">Chromista</Option>\n        <Option value=\"Fungi\">Fungi</Option>\n        <Option value=\"Insecta\">Insecta</Option>\n        <Option value=\"Mammalia\">Mammalia</Option>\n        <Option value=\"Mollusca\">Mollusca</Option>\n        <Option value=\"Reptilia\">Reptilia</Option>\n        <Option value=\"Plantae\">Plantae</Option>\n        <Option value=\"Protozoa\">Protozoa</Option>\n      </Select>\n      {/* <Select defaultValue=\"lucy\" style={{ width: 120 }} disabled>\n        <Option value=\"lucy\">Lucy</Option>\n      </Select>\n      <Select defaultValue=\"lucy\" style={{ width: 120 }} loading>\n        <Option value=\"lucy\">Lucy</Option>\n      </Select>\n      <Select defaultValue=\"lucy\" style={{ width: 120 }} allowClear>\n        <Option value=\"lucy\">Lucy</Option>\n      </Select> */}\n    </div>\n  )\n}","import { Input, Button, Select } from 'antd';\n\nconst { Option } = Select;\n\nexport function LocationInput(props) {\n  return (\n    <div className=\"location-input\">\n      {/* <Input placeholder=\"Location\" allowClear /> */}\n      <Select\n        placeholder=\"Select a location\"\n        size=\"large\"\n        allowClear={true}\n        onChange={props.handleSelectLocation}\n      >\n        <Option value=\"30.092146220963105, -97.41695255909492\">Earth Native</Option>\n        <Option value=\"26.2290,-97.3473\">Laguna Atascosa</Option> \n      </Select>\n      <h3>OR</h3>\n      <Button\n        type=\"primary\"\n        size=\"large\"\n        onClick={props.handleLocationButtonClick}\n      >\n      Use my current location\n      </Button>\n    </div>\n  )\n}\n","import { Button } from 'antd';\n\nexport function ListerButton(props) {\n  return (\n    <div className=\"lister-button\">\n      <Button\n        type=\"primary\"\n        size=\"large\"\n        onClick={props.handleListerButtonClick}\n      >\n        List Species\n      </Button>\n      <Button\n        type=\"secondary\"\n        size=\"large\"\n        onClick={props.handleClearListerButtonClick}\n      >\n        Clear List\n      </Button>\n    </div>\n  );\n}","import { List, Divider } from 'antd';\n\nexport function SpeciesList(props) {\n  return (\n    <div className=\"species-list\">\n      <Divider\n        orientation=\"left\">\n        {`${props.speciesList.length} ${props.iconicTaxa} Species`}\n      </Divider>\n      <List\n        // header={<div>{props.iconicTaxa}</div>}\n        // bordered\n        dataSource={props.speciesList}\n        renderItem={item => (\n          <List.Item>{item}</List.Item>\n        )}\n      />\n      {/* <Divider orientation=\"left\">Small Size</Divider> */}\n    </div>\n  );\n}","export const recursiveObservationFetcher = async (iconicTaxa, pageNum, lat, long, results)  => {\n    console.log(pageNum);\n    // let uri = `https://api.inaturalist.org/v1/observations?page=${pageNum}&per_page=200&iconic_taxa=${iconicTaxa}&lat=30.2672&lng=-97.7431&radius=100&quality_grade=research&order=desc&order_by=created_at`\n    // let uri = `https://api.inaturalist.org/v1/observations?page=${pageNum}&per_page=200&iconic_taxa=${iconicTaxa}&lat=26.2290&lng=-97.3473&radius=100&quality_grade=research&order=desc&order_by=created_at`\n    let uri = `https://api.inaturalist.org/v1/observations?page=${pageNum}&per_page=200&iconic_taxa=${iconicTaxa}&lat=${lat}&lng=${long}&radius=100&quality_grade=research&order=desc&order_by=created_at`\n    const response = await fetch(\n        uri, {\n            method: 'GET',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n        }\n    );\n    \n    if (!response.ok) {\n        const message = `An error has occured: ${response.status}`;\n        throw new Error(message);\n    }\n\n    let observations = await response.json();\n    results.push(observations.results);\n\n    console.log(observations.results[observations.results.length - 1]['created_at']);\n    \n    const numPages = 2;\n\n    if (pageNum === numPages) {\n        return results;\n    } else {\n        let nextPage = pageNum + 1\n        return recursiveObservationFetcher(iconicTaxa, nextPage, lat, long, results)\n    }\n}\n","import { useState } from 'react';\nimport { Empty, Spin } from 'antd';\nimport { IconicTaxaSelector } from './IconicTaxaSelector';\nimport { LocationInput } from './LocationInput';\nimport { ListerButton } from './ListerButton';\nimport { SpeciesList } from './SpeciesList';\nimport { recursiveObservationFetcher } from './utilities/fetchObservations';\n\nexport function ListerContent() {\n  const [iconicTaxa, setIconicTaxa] = useState('');\n  const [location, setLocation] = useState('');\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const createSpeciesList = (dataPages) => {\n    let speciesSet = new Set();\n\n    dataPages.forEach(page => {\n        page.forEach(observation => {\n            // console.log(observation);\n            if (observation[\"taxon\"][\"preferred_common_name\"]) {\n              speciesSet.add(observation[\"taxon\"][\"preferred_common_name\"]);\n            }\n        })\n    });\n\n    let speciesList = [...speciesSet].sort();\n    return speciesList;\n  }\n\n  const handleIconicTaxaChange = (value) => {\n    setIconicTaxa(value);\n  }\n\n  const handleSelectLocation = (value) => {\n    setLocation(value);\n  }\n\n  const success = (pos) => {\n    let crd = pos.coords;\n    setLocation(`${crd.latitude}, ${crd.longitude}`);\n\n    console.log('Your current position is:');\n    console.log(`Latitude : ${crd.latitude}`);\n    console.log(`Longitude: ${crd.longitude}`);\n    console.log(`More or less ${crd.accuracy} meters.`);\n  }\n\n  const error = (err) => {\n    console.warn(`ERROR(${err.code}): ${err.message}`);\n  }\n\n  const handleLocationButtonClick = (e) => {\n    const options = {\n      enableHighAccuracy: true,\n      timeout: 5000,\n      maximumAge: 0\n    };\n\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(success, error, options);\n    } else {\n      window.alert(\"Geolocation is not supported by this browser.\");\n    }\n  }\n  \n  const handleListerButtonClick = (e) => {\n    console.log(location.split(\",\")[0]);\n    setLoading(true);\n    if (data) {\n      setData([]);\n    }\n    recursiveObservationFetcher(\n      iconicTaxa, 1, location.split(\",\")[0], location.split(\",\")[1], []\n    ).then(data => {\n      let speciesList = createSpeciesList(data);\n      setData(speciesList);\n      setLoading(false);\n    })\n  }\n\n  const handleClearListerButtonClick = (e) => {\n    setData([]);\n    setIconicTaxa('');\n    setLocation('');\n  }\n\n  console.log(`${data.length} species observed`);\n  console.log(data);\n\n\n  return (\n    <div className=\"lister-content\">\n      <IconicTaxaSelector handleIconicTaxaChange={handleIconicTaxaChange} />\n      <LocationInput\n        handleLocationButtonClick={handleLocationButtonClick}\n        handleSelectLocation={handleSelectLocation} />\n      <ListerButton\n        handleListerButtonClick={handleListerButtonClick}\n        handleClearListerButtonClick={handleClearListerButtonClick}\n      />\n      {!data.length ?\n        loading ?\n          <Spin className=\"spinner\" size=\"large\" /> :\n            <Empty /> :\n              <SpeciesList\n                speciesList={data}\n                iconicTaxa={iconicTaxa}\n              />\n      }\n    </div>\n  )\n}\n","import { Layout } from 'antd';\nimport { ListerContent } from './ListerContent';\n\nconst { Header, Footer } = Layout;\n\nexport function ListerLayout() {\n  return (\n    <Layout className=\"lister-layout\">\n      <Header className=\"lister-header\"><h1>Species Lister</h1></Header>\n      <ListerContent />\n      {/* <Footer className='lister-footer'>\n      List created from the last 2000 observations on <a href='https://inaturalist.org'>inaturalist.org</a>\n      </Footer> */}\n    </Layout>\n  );\n}","import './App.less';\nimport { ListerLayout } from './ListerLayout';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <ListerLayout />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}