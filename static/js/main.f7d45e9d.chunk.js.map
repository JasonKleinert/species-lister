{"version":3,"sources":["components/IconicTaxaSelector.jsx","components/LocationControls.jsx","components/SearchRadiusSelector.jsx","components/NumPagesSelector.jsx","components/ListerButton.jsx","components/SpeciesList.jsx","utilities/fetchObservations.js","components/ListerContent.jsx","components/ListerLayout.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Option","Select","IconicTaxaSelector","props","className","placeholder","value","iconicTaxa","allowClear","style","width","onChange","handleIconicTaxaChange","LocationControls","locationName","handleSelectLocation","type","onClick","handleLocationButtonClick","SearchRadiusSelector","radius","handleSelectSearchRadius","NumPagesSelector","numPages","handleSelectNumPages","ListerButton","size","handleListerButtonClick","handleClearListerButtonClick","SpeciesList","orientation","speciesList","length","dataSource","renderItem","item","Item","recursiveObservationFetcher","pageNum","lat","long","results","a","console","log","uri","fetch","method","headers","response","ok","message","status","Error","json","observations","push","nextPage","ListerContent","useState","setIconicTaxa","location","setLocation","setLocationName","setRadius","setNumPages","data","setData","loading","setLoading","success","pos","crd","coords","latitude","longitude","accuracy","error","err","warn","code","e","navigator","geolocation","getCurrentPosition","enableHighAccuracy","timeout","maximumAge","window","alert","split","then","dataPages","speciesSet","Set","forEach","page","observation","add","sort","createSpeciesList","tip","Header","Layout","Footer","ListerLayout","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f7d45e9d.chunk.js","sourcesContent":["import { Select } from 'antd';\n\nconst { Option } = Select;\n\nexport function IconicTaxaSelector(props) {\n  return (\n    <div className=\"iconic-taxa-selector\">\n      <Select\n        placeholder=\"Select iconic taxa\"\n        value={props.iconicTaxa}\n        allowClear={true}\n        style={{ width: 200 }}\n        onChange={props.handleIconicTaxaChange}\n      >\n        <Option value=\"Animalia\">Animalia</Option>\n        <Option value=\"Amphibia\">Amphibia</Option>\n        <Option value=\"Arachnida\">Arachnida</Option>\n        <Option value=\"Aves\">Aves</Option>\n        <Option value=\"Chromista\">Chromista</Option>\n        <Option value=\"Fungi\">Fungi</Option>\n        <Option value=\"Insecta\">Insecta</Option>\n        <Option value=\"Mammalia\">Mammalia</Option>\n        <Option value=\"Mollusca\">Mollusca</Option>\n        <Option value=\"Reptilia\">Reptilia</Option>\n        <Option value=\"Plantae\">Plantae</Option>\n        <Option value=\"Protozoa\">Protozoa</Option>\n      </Select>\n    </div>\n  )\n}\n","import { Button, Select } from 'antd';\n\nconst { Option } = Select;\n\nexport function LocationControls(props) {\n  return (\n    <div className=\"location-controls\">\n      <Select\n        placeholder=\"Select location\"\n        value={props.locationName}\n        allowClear={true}\n        style={{ width: 200 }}\n        onChange={props.handleSelectLocation}\n      >\n        <Option value=\"34.4377, -101.0599\">Caprock Canyons</Option>\n        <Option value=\"30.0922, -97.4169\">Earth Native</Option>\n        <Option value=\"26.2290,-97.3473\">Laguna Atascosa</Option>\n        <Option value=\"31.6191, -102.8119\">Monahans Sandhills</Option>\n      </Select>\n      <h3>OR</h3>\n      <Button\n        className=\"location-button\"\n        type=\"default\"\n        style={{ width: 200 }}\n        onClick={props.handleLocationButtonClick}\n      >\n      Use my current location\n      </Button>\n    </div>\n  )\n}\n","import { Select } from 'antd';\n\nconst { Option } = Select;\n\nexport function SearchRadiusSelector(props) {\n  return (\n    <div className=\"search-radius-selector\">\n      <Select\n        placeholder=\"Select search radius\"\n        value={props.radius}\n        allowClear={true}\n        style={{ width: 200 }}\n        onChange={props.handleSelectSearchRadius}\n      >\n        <Option value={5}>5 km</Option>\n        <Option value={10}>10 km</Option>\n        <Option value={25}>25 km</Option>\n        <Option value={50}>50 km</Option>\n        <Option value={100}>100 km</Option>\n      </Select>\n    </div>\n  )\n}\n","import { Select } from 'antd';\n\nconst { Option } = Select;\n\nexport function NumPagesSelector(props) {\n  return (\n    <div className=\"numpages-selector\">\n      <Select\n        placeholder=\"Select pages to search\"\n        value={props.numPages}\n        allowClear={true}\n        style={{ width: 200 }}\n        onChange={props.handleSelectNumPages}\n      >\n        <Option value={1}>1</Option>\n        <Option value={2}>2</Option>\n        <Option value={3}>3</Option>\n        <Option value={4}>4</Option>\n        <Option value={5}>5</Option>\n        <Option value={10}>10</Option>\n      </Select>\n    </div>\n  )\n}\n","import { Button } from 'antd';\n\nexport function ListerButton(props) {\n  return (\n    <div className=\"lister-button\">\n      <Button\n        type=\"primary\"\n        size=\"large\"\n        onClick={props.handleListerButtonClick}\n      >\n        List Species\n      </Button>\n      <Button\n        type=\"default\"\n        size=\"large\"\n        onClick={props.handleClearListerButtonClick}\n      >\n        Start Over\n      </Button>\n    </div>\n  );\n}\n","import { List, Divider } from 'antd';\n\nexport function SpeciesList(props) {\n  return (\n    <div className=\"species-list\">\n      <Divider\n        orientation=\"left\">\n        {`${props.speciesList.length} ${props.iconicTaxa} Species`}\n      </Divider>\n      <List\n        // header={<div>{props.iconicTaxa}</div>}\n        // bordered\n        dataSource={props.speciesList}\n        renderItem={item => (\n          <List.Item>{item}</List.Item>\n        )}\n      />\n      {/* <Divider orientation=\"left\">Small Size</Divider> */}\n    </div>\n  );\n}\n","export const recursiveObservationFetcher = async (\n    iconicTaxa, pageNum, numPages, lat, long, radius, results\n)  => {\n    console.log(pageNum);\n    let uri = `https://api.inaturalist.org/v1/observations?page=${pageNum}&per_page=200&iconic_taxa=${iconicTaxa}&lat=${lat}&lng=${long}&radius=${radius}&quality_grade=research&order=desc&order_by=created_at`\n    console.log(uri);\n    const response = await fetch(\n        uri, {\n            method: 'GET',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n        }\n    );\n    \n    if (!response.ok) {\n        const message = `An error has occured: ${response.status}`;\n        throw new Error(message);\n    }\n\n    let observations = await response.json();\n    results.push(observations.results);\n    \n    if (pageNum === numPages) {\n        return results;\n    } else {\n        let nextPage = pageNum + 1\n        return recursiveObservationFetcher(iconicTaxa, nextPage, numPages, lat, long, radius, results)\n    }\n}\n","import { useState } from 'react';\nimport { Empty, Spin } from 'antd';\nimport { IconicTaxaSelector } from './IconicTaxaSelector';\nimport { LocationControls } from './LocationControls';\nimport { SearchRadiusSelector } from './SearchRadiusSelector';\nimport { NumPagesSelector } from './NumPagesSelector';\nimport { ListerButton } from './ListerButton';\nimport { SpeciesList } from './SpeciesList';\nimport { recursiveObservationFetcher } from '../utilities/fetchObservations';\n\nexport function ListerContent() {\n  const [iconicTaxa, setIconicTaxa] = useState();\n  const [location, setLocation] = useState();\n  const [locationName, setLocationName] = useState();\n  const [radius, setRadius] = useState();\n  const [numPages, setNumPages] = useState();\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const createSpeciesList = (dataPages) => {\n    let speciesSet = new Set();\n\n    dataPages.forEach(page => {\n        page.forEach(observation => {\n            if (observation[\"taxon\"][\"preferred_common_name\"]) {\n              speciesSet.add(observation[\"taxon\"][\"preferred_common_name\"]);\n            }\n        })\n    });\n\n    let speciesList = [...speciesSet].sort();\n    return speciesList;\n  }\n\n  const handleIconicTaxaChange = (value) => {\n    setIconicTaxa(value);\n  }\n\n  const handleSelectLocation = (value) => {\n    setLocation(value);\n    setLocationName(value);\n  }\n\n  const success = (pos) => {\n    let crd = pos.coords;\n    setLocation(`${crd.latitude}, ${crd.longitude}`);\n    setLocationName(\"My current location\");\n\n    console.log('Your current position is:');\n    console.log(`Latitude : ${crd.latitude}`);\n    console.log(`Longitude: ${crd.longitude}`);\n    console.log(`More or less ${crd.accuracy} meters.`);\n  }\n\n  const error = (err) => {\n    console.warn(`ERROR(${err.code}): ${err.message}`);\n  }\n\n  const handleLocationButtonClick = (e) => {\n    const options = {\n      enableHighAccuracy: true,\n      timeout: 5000,\n      maximumAge: 0\n    };\n\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(success, error, options);\n    } else {\n      window.alert(\"Geolocation is not supported by this browser.\");\n    }\n  }\n\n  const handleSelectSearchRadius = (value) => {\n    setRadius(value);\n  }\n\n  const handleSelectNumPages = (value) => {\n    setNumPages(value);\n  }\n  \n  const handleListerButtonClick = (e) => {\n    console.log(location.split(\",\")[0]);\n    setLoading(true);\n    if (data) {\n      setData([]);\n    }\n    recursiveObservationFetcher(\n      iconicTaxa,\n      1,\n      numPages,\n      location.split(\",\")[0],\n      location.split(\",\")[1],\n      radius,\n      []\n    ).then(data => {\n      console.log(data);\n      let speciesList = createSpeciesList(data);\n      setData(speciesList);\n      setLoading(false);\n    })\n  }\n\n  const handleClearListerButtonClick = (e) => {\n    setData([]);\n    setIconicTaxa(null);\n    setLocation(null);\n    setLocationName(null);\n    setRadius(null);\n    setNumPages(null);\n  }\n\n  return (\n    <div className=\"lister-content\">\n      <IconicTaxaSelector\n        iconicTaxa={iconicTaxa}\n        handleIconicTaxaChange={handleIconicTaxaChange} />\n      <LocationControls\n        location={location}\n        locationName={locationName}\n        handleLocationButtonClick={handleLocationButtonClick}\n        handleSelectLocation={handleSelectLocation}\n      />\n      <SearchRadiusSelector\n        radius={radius}\n        handleSelectSearchRadius={handleSelectSearchRadius}\n      />\n      <NumPagesSelector\n        numPages={numPages}\n        handleSelectNumPages={handleSelectNumPages}\n      />\n      <ListerButton\n        handleListerButtonClick={handleListerButtonClick}\n        handleClearListerButtonClick={handleClearListerButtonClick}\n      />\n      {!data.length ?\n        loading ?\n          <Spin\n            className=\"spinner\"\n            size=\"large\"\n            tip=\"Gathering observations from iNaturalist...\"\n          /> :\n          <Empty /> :\n            <SpeciesList\n              speciesList={data}\n              iconicTaxa={iconicTaxa}\n            />\n      }\n    </div>\n  )\n}\n","import { Layout } from 'antd';\nimport { ListerContent } from './ListerContent';\n\nconst { Header, Footer } = Layout;\n\nexport function ListerLayout() {\n  return (\n    <Layout className=\"lister-layout\">\n      <Header className=\"lister-header\"><h1>Species Lister</h1></Header>\n      <ListerContent />\n      {/* <Footer className='lister-footer'>\n      List created from the last 2000 observations on <a href='https://inaturalist.org'>inaturalist.org</a>\n      </Footer> */}\n    </Layout>\n  );\n}\n","import './App.less';\nimport { ListerLayout } from './components/ListerLayout';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <ListerLayout />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}